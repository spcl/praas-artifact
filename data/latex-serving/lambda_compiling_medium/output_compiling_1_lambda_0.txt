{"output":"Rc files read:
  NONE
Latexmk: This is Latexmk, John Collins, 31 Jan. 2024. Version 4.83.
Latexmk: making output directory 'pdfs'
Latexmk: Doing main (small) clean up for 'sample-sigconf.tex'
No existing .aux file, so I'll make a simple one, and require run of *latex.
Force everything to be remade.
Latexmk: applying rule 'pdflatex'...
Rule 'pdflatex':  Reasons for rerun
Category 'other':
  Rerun of 'pdflatex' forced or previously required:
    Reason or flag: 'go_mode'

------------
Run number 1 of rule 'pdflatex'
------------
------------
Running 'pdflatex  -recorder -output-directory="pdfs"  "sample-sigconf.tex"'
------------
This is pdfTeX, Version 3.141592653-2.6-1.40.25 (TeX Live 2023) (preloaded format=pdflatex)
 restricted \write18 enabled.

kpathsea: Running mktexfmt pdflatex.fmt
mktexfmt: mktexfmt is using the following fmtutil.cnf files (in precedence order):
mktexfmt:   /var/task/texlive/2017/texmf-dist/web2c/fmtutil.cnf
mktexfmt: mktexfmt is using the following fmtutil.cnf file for writing changes:
mktexfmt:   /tmp/texmf-config/web2c/fmtutil.cnf
mktexfmt [INFO]: writing formats under /tmp/texmf-var/web2c
mktexfmt [INFO]: --- remaking pdflatex with pdftex
mktexfmt: running `pdftex -ini   -jobname=pdflatex -progname=pdflatex -translate-file=cp227.tcx *pdflatex.ini' ...
This is pdfTeX, Version 3.141592653-2.6-1.40.25 (TeX Live 2023) (INITEX)
 restricted \write18 enabled.
 (/var/task/texlive/2017/texmf-dist/web2c/cp227.tcx)
entering extended mode
(/var/task/texlive/2017/texmf-dist/tex/latex/tex-ini-files/pdflatex.ini
(/var/task/texlive/2017/texmf-dist/tex/generic/tex-ini-files/pdftexconfig.tex)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/latex.ltx
(/var/task/texlive/2017/texmf-dist/tex/latex/base/texsys.cfg)
./texsys.aux found


\@currdir set to: ./.


Assuming \openin and \input 
have the same search path.


Defining UNIX/DOS style filename parser.

catcodes, registers, parameters,
LaTeX2e <2023-11-01> patch level 1
(/var/task/texlive/2017/texmf-dist/tex/latex/l3kernel/expl3.ltx
(/var/task/texlive/2017/texmf-dist/tex/latex/l3kernel/expl3-code.tex)) hacks,
document commands, control, par, spacing, files, font encodings, lengths,
====================================

Local config file fonttext.cfg used

====================================
(/var/task/texlive/2017/texmf-dist/tex/latex/base/fonttext.cfg
(/var/task/texlive/2017/texmf-dist/tex/latex/base/fonttext.ltx
=== Don't modify this file, use a .cfg file instead ===

(/var/task/texlive/2017/texmf-dist/tex/latex/base/omlenc.def)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/omsenc.def)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/ot1enc.def)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/t1enc.def)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/ts1enc.def)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/ts1cmr.fd)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/t1cmr.fd)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/ot1cmr.fd)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/ot1cmss.fd)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/ot1cmtt.fd)))
====================================

Local config file fontmath.cfg used

====================================
(/var/task/texlive/2017/texmf-dist/tex/latex/base/fontmath.cfg
(/var/task/texlive/2017/texmf-dist/tex/latex/base/fontmath.ltx
=== Don't modify this file, use a .cfg file instead ===

(/var/task/texlive/2017/texmf-dist/tex/latex/base/omlcmm.fd)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/omscmsy.fd)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/omxcmex.fd)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/ucmr.fd)))
====================================

Local config file preload.cfg used

=====================================
(/var/task/texlive/2017/texmf-dist/tex/latex/base/preload.cfg
(/var/task/texlive/2017/texmf-dist/tex/latex/base/preload.ltx)) page nos.,
x-ref, environments, center, verbatim, math definitions, boxes, title,
sectioning, contents, floats, footnotes, index, bibliography, output,
===========================================
Local configuration file hyphen.cfg used
===========================================
(/var/task/texlive/2017/texmf-dist/tex/generic/babel/hyphen.cfg
(/var/task/texlive/2017/texmf-dist/tex/generic/hyphen/hyphen.tex)
(/var/task/texlive/2017/texmf-dist/tex/generic/hyphen/dumyhyph.tex)
(/var/task/texlive/2017/texmf-dist/tex/generic/hyphen/zerohyph.tex)
(/var/task/texlive/2017/texmf-dist/tex/generic/hyphen/zerohyph.tex)
(/var/task/texlive/2017/texmf-dist/tex/generic/hyphen/zerohyph.tex))
(/var/task/texlive/2017/texmf-dist/tex/generic/pdftex/glyphtounicode.tex)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/utf8.def
(/var/task/texlive/2017/texmf-dist/tex/latex/base/omsenc.dfu)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/ot1enc.dfu)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/t1enc.dfu)
(/var/task/texlive/2017/texmf-dist/tex/latex/base/ts1enc.dfu))
(/var/task/texlive/2017/texmf-dist/tex/latex/firstaid/latex2e-first-aid-for-ext
ernal-files.ltx)
 ) )
Beginning to dump on file pdflatex.fmt
 (preloaded format=pdflatex 2024.10.20)
23924 strings of total length 457280
1924373 memory locations dumped; current usage is 204&362323
22212 multiletter control sequences
\font\nullfont=nullfont
\font\c__fp_exp_intarray=cmr10 at 0.00002pt
\font\c__fp_trig_intarray=cmr10 at 0.00003pt
\font\c_initex_cctab=cmr10 at 0.00005pt
\font\c_other_cctab=cmr10 at 0.00006pt
\font\c_str_cctab=cmr10 at 0.00008pt
\font\g_tmpa_cctab=cmr10 at 0.00009pt
\font\g_tmpb_cctab=cmr10 at 0.0001pt
\font\g__regex_state_active_intarray=cmr10 at 0.00012pt
\font\g__regex_thread_info_intarray=cmr10 at 0.00014pt
\font\g__regex_submatch_prev_intarray=cmr10 at 0.00015pt
\font\g__regex_submatch_begin_intarray=cmr10 at 0.00017pt
\font\g__regex_submatch_end_intarray=cmr10 at 0.00018pt
\font\g__regex_submatch_case_intarray=cmr10 at 0.0002pt
\font\g__regex_balance_intarray=cmr10 at 0.00021pt
\font\g__codepoint_category_index_intarray=cmr10 at 0.00023pt
\font\g__codepoint_uppercase_index_intarray=cmr10 at 0.00024pt
\font\g__codepoint_lowercase_index_intarray=cmr10 at 0.00026pt
\font\g__codepoint_category_blocks_intarray=cmr10 at 0.00027pt
\font\g__codepoint_uppercase_blocks_intarray=cmr10 at 0.00029pt
\font\g__codepoint_lowercase_blocks_intarray=cmr10 at 0.0003pt
\font\OMX/cmex/m/n/10=cmex10
\font\tenln=line10
\font\tenlnw=linew10
\font\tencirc=lcircle10
\font\tencircw=lcirclew10
\font\OT1/cmr/m/n/5=cmr5
\font\OT1/cmr/m/n/7=cmr7
\font\OT1/cmr/m/n/10=cmr10
\font\OML/cmm/m/it/5=cmmi5
\font\OML/cmm/m/it/7=cmmi7
\font\OML/cmm/m/it/10=cmmi10
\font\OMS/cmsy/m/n/5=cmsy5
\font\OMS/cmsy/m/n/7=cmsy7
\font\OMS/cmsy/m/n/10=cmsy10
\font\c_code_cctab=cmr10 at 0.00032pt
\font\c_document_cctab=cmr10 at 0.00034pt
558062 words of font info for 36 preloaded fonts
14 hyphenation exceptions
Hyphenation trie of length 6081 has 183 ops out of 35111
  2 for language 1
  181 for language 0
0 words of pdfTeX memory
0 indirect objects
No pages of output.
Transcript written on pdflatex.log.
mktexfmt [INFO]: log file copied to: /tmp/texmf-var/web2c/pdftex/pdflatex.log
mktexfmt [INFO]: /tmp/texmf-var/web2c/pdftex/pdflatex.fmt installed.
mktexfmt [INFO]: successfully rebuilt formats: 1
mktexfmt [INFO]: not selected formats: 12
mktexfmt [INFO]: total formats: 13
mktexfmt [INFO]: 
*************************************************************
*                                                           *
* WARNING: you are switching to fmtutil's per-user formats. *
*         Please read the following warnings!               *
*                                                           *
*************************************************************

You have run fmtutil-user (as opposed to fmtutil-sys) for the first time;
this has created format files which are local to your personal account.

From now on, any changes in system formats will *not* be automatically
reflected in your files; furthermore, running fmtutil-sys will no longer
have any effect for you.

As a consequence, you yourself have to rerun fmtutil-user after any
change in the system directories. For example, when one of the LaTeX or
other format source files changes, which happens frequently.
See https://tug.org/texlive/scripts-sys-user.html for details.

If you want to undo this, remove the files mentioned above.

Run mktexfmt --help for full documentation of fmtutil.
mktexfmt [INFO]: exiting with status 0
entering extended mode
(./sample-sigconf.tex
LaTeX2e <2023-11-01> patch level 1
L3 programming layer <2024-02-20>

(/var/task/texlive/2017/texmf-dist/tex/latex/latex-lab/documentmetadata-support
.ltx
(/var/task/texlive/2017/texmf-dist/tex/latex/pdfmanagement-testphase/pdfmanagem
ent-testphase.sty
(/var/task/texlive/2017/texmf-dist/tex/latex/tagpdf/tagpdf-base.sty)
(/var/task/texlive/2017/texmf-dist/tex/latex/pdfmanagement-testphase/pdfmanagem
ent-testphase.ltx)))
(/var/task/texlive/2017/texmf-dist/tex/latex/l3backend/l3backend-pdftex.def)
(/var/task/texlive/2017/texmf-dist/tex/latex/pdfmanagement-testphase/l3backend-
testphase-pdftex.def)
(/var/task/texlive/2017/texmf-dist/tex/latex/pdfmanagement-testphase/pdfmanagem
ent-firstaid.sty) (./acmart.cls
Document Class: acmart 2023/06/11 v1.90a Typesetting articles for the Associati
on for Computing Machinery
(/var/task/texlive/2017/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(/var/task/texlive/2017/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(/var/task/texlive/2017/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(/var/task/texlive/2017/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(/var/task/texlive/2017/texmf-dist/tex/generic/xstring/xstring.sty
(/var/task/texlive/2017/texmf-dist/tex/generic/xstring/xstring.tex))
(/var/task/texlive/2017/texmf-dist/tex/generic/iftex/iftex.sty)
(/var/task/texlive/2017/texmf-dist/tex/latex/amscls/amsart.cls
Document Class: amsart 2020/05/29 v2.20.6
(/var/task/texlive/2017/texmf-dist/tex/latex/amsmath/amsmath.sty
For additional information on amsmath, use the `\\","full_clean":false,"updated_files":["ACM-Reference-Format.bst","acmart.bib","acmart.cls","acmart.dtx","acmart.ins","sample-base.bib","sample-franklin.png","sample-sigconf.tex","sampleteaser.pdf","secs\/acks.tex","secs\/appendices.tex","secs\/appendix.tex","secs\/authors.tex","secs\/citations.tex","secs\/core.tex","secs\/figure.tex","secs\/multi.tex","secs\/sigchi.tex"],"time_data":0.761407,"time_compile":25.415794,"command":["latexmk","-pdf","--output-directory=pdfs","sample-sigconf.tex","-gg"],"status":"succcess"}
